{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Workineh\\\\addisclothings\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromAuth(user, additionalData);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:\\Users\\Workineh\\addisclothings\\client\\src\\redux\\user\\user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from \"./user.types\";\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure, signUpSuccess, signUpFailure\r\n} from \"./user.actions\";\r\nimport {auth,\r\n        googleProvider,\r\n        createUserProfileDocument,\r\n         getCurrentUser } from \"../../firebase/firebase.utils\";\r\n\r\nexport function* getSnapshotFromAuth (userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({id: userSnapshot.id, ...userSnapshot.data()})\r\n        );\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: {email, password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromAuth(user)\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n   try {\r\n       const userAuth = yield getCurrentUser();\r\n       if (!userAuth) return ;\r\n       yield getSnapshotFromAuth(userAuth);\r\n   }catch (error) {\r\n       yield put(signInFailure(error))\r\n   }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n      yield auth.signOut();\r\n      yield put(signOutSuccess())\r\n  }catch (error) {\r\n      yield put(signOutFailure(error))\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* signUp({payload: {email,password, displayName}}) {\r\n  try {\r\n      const {user} = yield auth.createUserWithEmailAndPassword(email, password)\r\n      yield put(signUpSuccess({user,  additionalData: {displayName}}))\r\n  }catch (error) {\r\n      yield put(signUpFailure(error))\r\n  }\r\n}\r\n\r\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\r\n  yield getSnapshotFromAuth(user, additionalData)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n          call(onGoogleSignInStart),\r\n          call(onEmailSignInStart),\r\n          call(isUserAuthenticated),\r\n          call(onSignOutStart),\r\n          call(onSignUpStart),\r\n          call(onSignUpSuccess)])\r\n}"]},"metadata":{},"sourceType":"module"}