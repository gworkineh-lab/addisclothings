{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Workineh\\addisclothings\\client\\src\\redux\\shop\\shop.actions.js"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACIC,+BADJ,EAEIC,SAFJ,QAGQ,+BAHR;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAoB;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,CAApB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGH,cAAc,KAAK;AACvDC,EAAAA,IAAI,EAACL,eAAe,CAACQ,yBADkC;AAEvDC,EAAAA,OAAO,EAAEL;AAF8C,CAAL,CAA9C;AAKP,OAAO,MAAMM,uBAAuB,GAAGC,YAAY,KAAK;AACrDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AAChB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAMC,QAAN,IAAkB;AACxC,YAAMf,cAAc,GAAGH,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACF,KAHD,EAGGgB,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIF,GARD;AAUF,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\nimport\r\n   {convertCollectionsSnapshotToMap,\r\n    firestore}\r\n   from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) =>({\r\n   type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n   type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n   payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n   type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n   payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n   return dispatch => {\r\n      const collectionRef = firestore.collection('collections');\r\n      dispatch(fetchCollectionsStart());\r\n\r\n      collectionRef.get().then(async snapshot => {\r\n         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n         dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n   }\r\n\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}